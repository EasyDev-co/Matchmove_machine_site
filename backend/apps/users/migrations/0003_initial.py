# Generated by Django 5.1 on 2024-08-25 08:36

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0002_delete_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfirmCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, null=True, unique=True, verbose_name='Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Time')),
                ('purpose', models.PositiveSmallIntegerField(choices=[(1, 'Reset Password'), (2, 'Confirm Email')], verbose_name='Purpose')),
                ('is_used', models.BooleanField(default=False, verbose_name='Used')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Confirmation Code',
                'verbose_name_plural': 'Confirmation Codes',
            },
        ),
        migrations.CreateModel(
            name='EmailErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Error Message')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Sent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Time')),
                ('confirm_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.confirmcode', verbose_name='Code')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Email Sending Error',
                'verbose_name_plural': 'Email Sending Errors',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Имя пользователя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Сайт')),
                ('portfolio', models.URLField(blank=True, null=True, verbose_name='Портфолио')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('youtube', models.URLField(blank=True, null=True, verbose_name='YouTube')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('vimeo', models.URLField(blank=True, null=True, verbose_name='Vimeo')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Фото пользователя')),
                ('groups', models.ManyToManyField(related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['email'],
            },
        ),
    ]
